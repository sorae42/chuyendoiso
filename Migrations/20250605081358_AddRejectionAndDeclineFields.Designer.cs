// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using chuyendoiso.Data;

#nullable disable

namespace chuyendoiso.Migrations
{
    [DbContext(typeof(chuyendoisoContext))]
    [Migration("20250605081358_AddRejectionAndDeclineFields")]
    partial class AddRejectionAndDeclineFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("chuyendoiso.Models.ActionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("RelatedUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RelatedUserId");

                    b.ToTable("ActionLogs");
                });

            modelBuilder.Entity("chuyendoiso.Models.Auth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<bool>("IsTwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("OtpCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("OtpExpires")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ResetToken")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TrustedDeviceToken")
                        .HasColumnType("text");

                    b.Property<DateTime?>("TrustedUntil")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("UnitId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("Auth");
                });

            modelBuilder.Entity("chuyendoiso.Models.EvaluationPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("boolean");

                    b.Property<string>("LockAttachment")
                        .HasColumnType("text");

                    b.Property<string>("LockReason")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LockedUntil")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("EvaluationPeriod");
                });

            modelBuilder.Entity("chuyendoiso.Models.EvaluationUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EvaluationPeriodId")
                        .HasColumnType("integer");

                    b.Property<int>("UnitId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EvaluationPeriodId");

                    b.HasIndex("UnitId");

                    b.ToTable("EvaluationUnit");
                });

            modelBuilder.Entity("chuyendoiso.Models.FinalReviewResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FinalAttachmentPath")
                        .HasColumnType("text");

                    b.Property<string>("FinalComment")
                        .HasColumnType("text");

                    b.Property<float?>("FinalScore")
                        .HasColumnType("real");

                    b.Property<bool>("IsRejected")
                        .HasColumnType("boolean");

                    b.Property<string>("RejectAttachmentPath")
                        .HasColumnType("text");

                    b.Property<string>("RejectReason")
                        .HasColumnType("text");

                    b.Property<DateTime?>("RejectedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("ReviewAssignmentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReviewAssignmentId");

                    b.ToTable("FinalReviewResult");
                });

            modelBuilder.Entity("chuyendoiso.Models.ParentCriteria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int?>("EvaluationPeriodId")
                        .HasColumnType("integer");

                    b.Property<string>("EvidenceInfo")
                        .HasColumnType("text");

                    b.Property<float?>("MaxScore")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("TargetGroupId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EvaluationPeriodId");

                    b.HasIndex("TargetGroupId");

                    b.ToTable("ParentCriteria");
                });

            modelBuilder.Entity("chuyendoiso.Models.ReviewAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ReviewerId")
                        .HasColumnType("integer");

                    b.Property<int?>("SubCriteriaId")
                        .HasColumnType("integer");

                    b.Property<int>("UnitId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ReviewerId");

                    b.HasIndex("SubCriteriaId");

                    b.HasIndex("UnitId");

                    b.ToTable("ReviewAssignment");
                });

            modelBuilder.Entity("chuyendoiso.Models.ReviewCouncil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("CreatedById")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("ReviewCouncil");
                });

            modelBuilder.Entity("chuyendoiso.Models.ReviewResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AttachmentPath")
                        .HasColumnType("text");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<string>("DeclineAttachmentPath")
                        .HasColumnType("text");

                    b.Property<string>("DeclineReason")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DeclinedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeclined")
                        .HasColumnType("boolean");

                    b.Property<int>("ReviewAssignmentId")
                        .HasColumnType("integer");

                    b.Property<float?>("Score")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ReviewAssignmentId");

                    b.ToTable("ReviewResult");
                });

            modelBuilder.Entity("chuyendoiso.Models.Reviewer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsChair")
                        .HasColumnType("boolean");

                    b.Property<int>("ReviewCouncilId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AuthId");

                    b.HasIndex("ReviewCouncilId");

                    b.ToTable("Reviewer");
                });

            modelBuilder.Entity("chuyendoiso.Models.SubCriteria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EvaluatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("EvidenceInfo")
                        .HasColumnType("text");

                    b.Property<float?>("MaxScore")
                        .HasColumnType("real");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ParentCriteriaId")
                        .HasColumnType("integer");

                    b.Property<string>("UnitEvaluate")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ParentCriteriaId");

                    b.ToTable("SubCriteria");
                });

            modelBuilder.Entity("chuyendoiso.Models.SubCriteriaAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EvaluatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("EvaluationPeriodId")
                        .HasColumnType("integer");

                    b.Property<string>("EvidenceInfo")
                        .HasColumnType("text");

                    b.Property<float?>("Score")
                        .HasColumnType("real");

                    b.Property<int>("SubCriteriaId")
                        .HasColumnType("integer");

                    b.Property<int>("UnitId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EvaluationPeriodId");

                    b.HasIndex("SubCriteriaId");

                    b.HasIndex("UnitId");

                    b.ToTable("SubCriteriaAssignment");
                });

            modelBuilder.Entity("chuyendoiso.Models.TargetGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TargetGroup");
                });

            modelBuilder.Entity("chuyendoiso.Models.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("chuyendoiso.Models.ActionLog", b =>
                {
                    b.HasOne("chuyendoiso.Models.Auth", "RelatedUser")
                        .WithMany()
                        .HasForeignKey("RelatedUserId");

                    b.Navigation("RelatedUser");
                });

            modelBuilder.Entity("chuyendoiso.Models.Auth", b =>
                {
                    b.HasOne("chuyendoiso.Models.Unit", "Unit")
                        .WithMany("Users")
                        .HasForeignKey("UnitId");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("chuyendoiso.Models.EvaluationUnit", b =>
                {
                    b.HasOne("chuyendoiso.Models.EvaluationPeriod", "EvaluationPeriod")
                        .WithMany("EvaluationUnits")
                        .HasForeignKey("EvaluationPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("chuyendoiso.Models.Unit", "Unit")
                        .WithMany("EvaluationUnits")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EvaluationPeriod");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("chuyendoiso.Models.FinalReviewResult", b =>
                {
                    b.HasOne("chuyendoiso.Models.ReviewAssignment", "ReviewAssignment")
                        .WithMany()
                        .HasForeignKey("ReviewAssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReviewAssignment");
                });

            modelBuilder.Entity("chuyendoiso.Models.ParentCriteria", b =>
                {
                    b.HasOne("chuyendoiso.Models.EvaluationPeriod", "EvaluationPeriod")
                        .WithMany("ParentCriterias")
                        .HasForeignKey("EvaluationPeriodId");

                    b.HasOne("chuyendoiso.Models.TargetGroup", "TargetGroup")
                        .WithMany("ParentCriterias")
                        .HasForeignKey("TargetGroupId");

                    b.Navigation("EvaluationPeriod");

                    b.Navigation("TargetGroup");
                });

            modelBuilder.Entity("chuyendoiso.Models.ReviewAssignment", b =>
                {
                    b.HasOne("chuyendoiso.Models.Reviewer", "Reviewer")
                        .WithMany("ReviewAssignments")
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("chuyendoiso.Models.SubCriteria", "SubCriteria")
                        .WithMany()
                        .HasForeignKey("SubCriteriaId");

                    b.HasOne("chuyendoiso.Models.Unit", "Unit")
                        .WithMany("ReviewAssignments")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reviewer");

                    b.Navigation("SubCriteria");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("chuyendoiso.Models.ReviewCouncil", b =>
                {
                    b.HasOne("chuyendoiso.Models.Auth", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("chuyendoiso.Models.ReviewResult", b =>
                {
                    b.HasOne("chuyendoiso.Models.ReviewAssignment", "ReviewAssignment")
                        .WithMany()
                        .HasForeignKey("ReviewAssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReviewAssignment");
                });

            modelBuilder.Entity("chuyendoiso.Models.Reviewer", b =>
                {
                    b.HasOne("chuyendoiso.Models.Auth", "Auth")
                        .WithMany()
                        .HasForeignKey("AuthId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("chuyendoiso.Models.ReviewCouncil", "ReviewCouncil")
                        .WithMany("Reviewers")
                        .HasForeignKey("ReviewCouncilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auth");

                    b.Navigation("ReviewCouncil");
                });

            modelBuilder.Entity("chuyendoiso.Models.SubCriteria", b =>
                {
                    b.HasOne("chuyendoiso.Models.ParentCriteria", "ParentCriteria")
                        .WithMany("SubCriterias")
                        .HasForeignKey("ParentCriteriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentCriteria");
                });

            modelBuilder.Entity("chuyendoiso.Models.SubCriteriaAssignment", b =>
                {
                    b.HasOne("chuyendoiso.Models.EvaluationPeriod", "EvaluationPeriod")
                        .WithMany()
                        .HasForeignKey("EvaluationPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("chuyendoiso.Models.SubCriteria", "SubCriteria")
                        .WithMany()
                        .HasForeignKey("SubCriteriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("chuyendoiso.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EvaluationPeriod");

                    b.Navigation("SubCriteria");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("chuyendoiso.Models.EvaluationPeriod", b =>
                {
                    b.Navigation("EvaluationUnits");

                    b.Navigation("ParentCriterias");
                });

            modelBuilder.Entity("chuyendoiso.Models.ParentCriteria", b =>
                {
                    b.Navigation("SubCriterias");
                });

            modelBuilder.Entity("chuyendoiso.Models.ReviewCouncil", b =>
                {
                    b.Navigation("Reviewers");
                });

            modelBuilder.Entity("chuyendoiso.Models.Reviewer", b =>
                {
                    b.Navigation("ReviewAssignments");
                });

            modelBuilder.Entity("chuyendoiso.Models.TargetGroup", b =>
                {
                    b.Navigation("ParentCriterias");
                });

            modelBuilder.Entity("chuyendoiso.Models.Unit", b =>
                {
                    b.Navigation("EvaluationUnits");

                    b.Navigation("ReviewAssignments");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
